name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger workflow on push to the main branch
  pull_request:
    branches:
      - main # Trigger workflow on PR to the main branch

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Specify Node.js version
          cache: "npm"

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Run Tests
      - name: Run Tests
        run: npm test

      # Step 5: Build the Project
      - name: Build Project
        run: npm run build

  deploy:
    needs: ci-cd # Ensure deployment happens after CI/CD pipeline
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Specify Node.js version
          cache: "npm"

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      # Step 4: Build the Project
      - name: Build Project
        run: npm run build

      # Step 5: Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: "--prod"
          working-directory: .
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
